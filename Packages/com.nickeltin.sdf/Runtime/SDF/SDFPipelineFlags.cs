using System;
using nickeltin.SDF.Runtime.DecoupledPipeline;

namespace nickeltin.SDF.Runtime
{
    /// <summary>
    /// Flags to make working with different pipelines easier
    /// </summary>
    [Flags]
    public enum SDFPipelineFlags
    {
        /// <summary>
        /// Not defined pipeline compatability
        /// </summary>
        [Obsolete("None of functions should be explicitly unknown. If function is unknown its needs to be updated")]
        Unknown = 0, // 0
        /// <summary>
        /// Regular pipeline where sdf content imported as part for texture, from texture postprocessor
        /// </summary>
        Regular = 1, // 1
        /// <summary>
        /// Same as <see cref="Decoupled"/> but works only for source sprites. Source sprite always generated by unity.
        /// </summary>
        DecoupledSourceSprite = 1 << 1, // 2
        /// <summary>
        /// Same as <see cref="Decoupled"/> but works only for SDF sprites
        /// </summary>
        DecoupledSDFSprite = 1 << 2, // 4
        /// <summary>
        /// Pipeline extension that available only for Unity 2023 and newer.
        /// Internally called <see cref="SDFUtil.IsNewSpriteMetadataEnabled"/>.
        /// 2023 introduced change in api where now Sprites can have scriptable objects assigned to them,
        /// making possible to extract metadata from sprite directly.
        /// </summary>
        Unity2023 = 1 << 3, // 8
        /// <summary>
        /// Decoupled pipeline uses <see cref="SDFAsset"/> files, and referencing source texture, but generation all
        /// sdf content as part of separate SDFAsset
        /// </summary>
        Decoupled = DecoupledSDFSprite | DecoupledSourceSprite,
        RegularAnd2023 = Regular | Unity2023,
        RegularAndDecoupled = Regular | Decoupled,
        DecoupledAnd2023 = Decoupled | Unity2023,
        /// <summary>
        /// Support for both <see cref="Regular"/>, <see cref="DecoupledSourceSprite"/>, <see cref="DecoupledSDFSprite"/> and <see cref="Unity2023"/>
        /// </summary>
        Everywhere = RegularAndDecoupled | Unity2023
    }
}